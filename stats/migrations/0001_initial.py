# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-09 19:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
from django.core.management import call_command
from os.path import join, dirname, abspath


def load_fixture(apps, schema_editor):
    call_command('loaddata', abspath(join(dirname(__file__), '../fixtures/crowdscores.json')))


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('short_name', models.CharField(max_length=15, verbose_name='short name')),
                ('full_name', models.CharField(max_length=60, verbose_name='full name')),
                ('ordering', models.IntegerField(verbose_name='ordering')),
                ('show_league', models.BooleanField(verbose_name='show league tables')),
                ('show_assists', models.BooleanField(verbose_name='show assists stats')),
                ('show_card', models.BooleanField(verbose_name='show card stats')),
                ('show_goal', models.BooleanField(verbose_name='show goal stats')),
            ],
        ),
        migrations.CreateModel(
            name='CrowdscoresResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=50)),
                ('params', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('home_goals', models.IntegerField(blank=True, null=True, verbose_name='home goals')),
                ('away_goals', models.IntegerField(blank=True, null=True, verbose_name='away goals')),
                ('home_dismiss', models.IntegerField(default=0, verbose_name='home dismissals')),
                ('away_dismiss', models.IntegerField(default=0, verbose_name='home dismissals')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='date of start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='date of current state')),
                ('is_result', models.BooleanField(verbose_name='is result')),
                ('go_extra', models.BooleanField(verbose_name='go to extra time')),
                ('has_extra', models.BooleanField(verbose_name='extra time has happened')),
            ],
        ),
        migrations.CreateModel(
            name='MatchState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=60, verbose_name='name')),
                ('short_name', models.CharField(max_length=10, verbose_name='short code')),
                ('medium_name', models.CharField(max_length=30, verbose_name='medium name')),
                ('long_name', models.CharField(max_length=60, verbose_name='long name')),
                ('length', models.IntegerField(blank=True, null=True)),
                ('offset', models.IntegerField(blank=True, null=True)),
                ('min_offset', models.IntegerField(blank=True, null=True, verbose_name='min real offset')),
                ('in_game', models.BooleanField()),
                ('in_play', models.BooleanField()),
                ('has_score', models.BooleanField()),
                ('knockout', models.BooleanField()),
                ('void', models.BooleanField()),
                ('is_break', models.BooleanField()),
                ('ended', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(max_length=20)),
                ('after_extra', models.BooleanField(verbose_name='After extra time')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('ordering', models.IntegerField(verbose_name='ordering')),
            ],
        ),
        migrations.CreateModel(
            name='RegionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('ordering', models.IntegerField(verbose_name='ordering')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('full_name', models.CharField(max_length=60, verbose_name='full name')),
                ('active', models.BooleanField(verbose_name='active')),
                ('has_league', models.BooleanField(verbose_name='has league tables')),
                ('has_assists', models.BooleanField(verbose_name='has assists stats')),
                ('has_card', models.BooleanField(verbose_name='has card stats')),
                ('has_goal', models.BooleanField(verbose_name='has goal stats')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='stats.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='StaticURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_name', models.URLField(verbose_name='flag URL')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('short_name', models.CharField(max_length=30, verbose_name='short name')),
                ('short_code', models.CharField(max_length=10, verbose_name='short code')),
                ('is_national', models.BooleanField(verbose_name='active')),
                ('show_league', models.BooleanField(verbose_name='show league tables')),
                ('show_assists', models.BooleanField(verbose_name='show assists stats')),
                ('show_card', models.BooleanField(verbose_name='show card stats')),
                ('show_goal', models.BooleanField(verbose_name='show goal stats')),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_flags', to='stats.StaticURL')),
                ('shirt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_shirts', to='stats.StaticURL')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbid', models.PositiveIntegerField(verbose_name='external id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('capacity', models.IntegerField(default=0)),
                ('geo_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geo_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Venue'),
        ),
        migrations.AddField(
            model_name='round',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='stats.Season'),
        ),
        migrations.AddField(
            model_name='regiongroup',
            name='flag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_group_flags', to='stats.StaticURL'),
        ),
        migrations.AddField(
            model_name='region',
            name='flag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_flags', to='stats.StaticURL'),
        ),
        migrations.AddField(
            model_name='region',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='stats.RegionGroup'),
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='stats.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='competition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Competition'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='stats.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='next_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_matches', to='stats.MatchState'),
        ),
        migrations.AddField(
            model_name='match',
            name='outcome',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Outcome'),
        ),
        migrations.AddField(
            model_name='match',
            name='round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Round'),
        ),
        migrations.AddField(
            model_name='match',
            name='season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Season'),
        ),
        migrations.AddField(
            model_name='match',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='stats.MatchState'),
        ),
        migrations.AddField(
            model_name='match',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stats.Venue'),
        ),
        migrations.AddField(
            model_name='competition',
            name='flag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_flags', to='stats.StaticURL'),
        ),
        migrations.AddField(
            model_name='competition',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='stats.Region'),
        ),
        migrations.RunPython(load_fixture),
    ]
